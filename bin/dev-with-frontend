#!/usr/bin/env bash
# frozen_string_literal: true

# Development server startup script with frontend hot reload
set -e

# Load environment variables if .env file exists
if [ -f .env ]; then
  export $(cat .env | grep -v '^#' | xargs)
fi

# Set default environment
export RACK_ENV=${RACK_ENV:-development}

echo "Starting html2rss-web development environment..."
echo "Environment: $RACK_ENV"
echo "Ruby server: http://localhost:3000"
echo "Astro dev server: http://localhost:4321 (with live reload)"
echo "Main development URL: http://localhost:4321"
echo ""

# Function to cleanup background processes
cleanup() {
  echo ""
  echo "Shutting down servers..."
  kill $RUBY_PID 2>/dev/null || true
  kill $ASTRO_PID 2>/dev/null || true
  kill $WATCHER_PID 2>/dev/null || true
  wait $RUBY_PID 2>/dev/null || true
  wait $ASTRO_PID 2>/dev/null || true
  wait $WATCHER_PID 2>/dev/null || true
  echo "Servers stopped."
  exit 0
}

# Set up signal handlers
trap cleanup SIGINT SIGTERM

# Start Ruby server in background
echo "Starting Ruby server..."
bundle exec puma -p ${PORT:-3000} -C config/puma.rb &
RUBY_PID=$!

# Wait a moment for Ruby server to start
sleep 3

# Start Astro dev server with API proxy
echo "Starting Astro dev server with API proxy..."
cd frontend

# Start Astro dev server (it will proxy API calls to Ruby server)
npm run dev &
ASTRO_PID=$!

# Wait a moment for Astro server to start
sleep 3

# Wait for both processes
wait $RUBY_PID $ASTRO_PID
